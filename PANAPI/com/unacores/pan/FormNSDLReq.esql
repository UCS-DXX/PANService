BROKER SCHEMA com.unacores.pan
PATH com.dcb.iib, com.unacores.iib;

CREATE COMPUTE MODULE FormNSDLReq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE envRef REFERENCE TO Environment.Variable.PANInfo[>];
		SET envRef.nsdlreq_time = CURRENT_TIMESTAMP;
		
		DECLARE nsdlUrl , userId , passwd , jkspath , signature, finalURL , panNo , encodeData , data CHARACTER;
		SET jkspath 	= getProperty('PANConfig','JKSPath');
		SET userId 		= getProperty('PANConfig','UserId');
		SET passwd 		= getProperty('PANConfig','Passwd');
		SET nsdlUrl 	= getProperty('PANConfig','NSDLUrl');
		SET panNo 		= InputRoot.DFDL.PANValidator.record.PANNo;
		SET signature 	= getSignatureKey(jkspath,passwd,userId,panNo);
		
		IF signature IS NULL OR LENGTH(signature) = 0 THEN
			THROW USER EXCEPTION CATALOG 'MyCatalog' MESSAGE 9000 VALUES ('signature is not generated with the jks certificate...');
		END IF;
		
		SET data 		= userId||'^'||panNo ;
		SET encodeData 	= encodeData(data,signature);
		SET finalURL 	= nsdlUrl||'?data='||encodeData;
		
		SET envRef.nsdl_req = finalURL;
		
		SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = finalURL;
		SET OutputRoot.HTTPInputHeader = NULL;
		
		--SET envRef.RequestIdentifier = InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
	END;
END MODULE;
