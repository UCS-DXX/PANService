BROKER SCHEMA com.unacores.pan

CREATE COMPUTE MODULE FormESBRes
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE envRef REFERENCE TO Environment.Variable.PANInfo[>];
		SET envRef.nsdlres_time = CURRENT_TIMESTAMP;
		--DECLARE wholeMsgBlob BLOB ASBITSTREAM(InputRoot.DFDL, InputRoot.Properties.Encoding, InputRoot.Properties.CodedCharSetId );
		SET envRef.nsdl_res = CAST(ASBITSTREAM(InputRoot.DFDL, InputRoot.Properties.Encoding, InputRoot.Properties.CodedCharSetId ) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		SET envRef.status = 'SUCCESS';
		
		SET OutputRoot.HTTPResponseHeader."Content-Type" = 'application/json';
		DECLARE inRef REFERENCE TO InputRoot.DFDL.NSDLResponse.record[>];
		CREATE FIELD OutputRoot.JSON.Data;
		DECLARE jsonRef REFERENCE TO OutputRoot.JSON.Data[>];
			SET jsonRef.PANRes.id 			= inRef.id;
			SET jsonRef.PANRes.panNo 		= inRef.panNo;
			SET jsonRef.PANRes.exist 		= inRef.exist;
			SET jsonRef.PANRes.lastname 	= inRef.lastname;
			SET jsonRef.PANRes.firstname 	= inRef.firstname;
			SET jsonRef.PANRes.middlename 	= inRef.middlename;
			SET jsonRef.PANRes.title 		= inRef.title;
			SET jsonRef.PANRes.issueDate 	= inRef.issueDate;
			SET jsonRef.PANRes.Optiona1 	= inRef.Optiona1;
			SET jsonRef.PANRes.Optiona2 	= inRef.Optiona2;
			SET jsonRef.PANRes.Optiona3 	= inRef.Optiona3;
		SET envRef.esb_res = CAST(ASBITSTREAM(OutputRoot.JSON.Data, InputRoot.Properties.Encoding, InputRoot.Properties.CodedCharSetId ) AS CHARACTER CCSID 1208);
		--SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = InputLocalEnvironment.Destination.HTTP.RequestIdentifier;	
	END;
END MODULE;
