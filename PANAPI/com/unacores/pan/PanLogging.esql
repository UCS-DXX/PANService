BROKER SCHEMA com.unacores.pan

CREATE COMPUTE MODULE PanLogging
	DECLARE DSNNAME EXTERNAL CHARACTER;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE insert_qry , exc_desc CHARACTER ;
		DECLARE DB_Details ROW;
		DECLARE envRef REFERENCE TO Environment.Variable.PANInfo[>];
		SET exc_desc   = Environment.Variables.TraceFileExc.errorCodeDescription;
		SET insert_qry = 'INSERT INTO esbuser.pan_auditlogs	
												(
													ID,HOST,PANNO,CHANNEL,ESBREQ_TIME,NSDLREQ_TIME,NSDLRES_TIME,
													ESBRES_TIME,ESB_REQ,NSDL_REQ,NSDL_RES,ESB_RES,STATUS,EXC_DESC 
											    ) 
												VALUES
													 (pan_auditlogs_seq.nextval,?,?,?,?,?,?,?,?,?,?,?,?,?)';
		
		SET DB_Details.A[] = PASSTHRU(insert_qry TO Database.{DSNNAME} VALUES 
													(
														envRef.host,envRef.panno,envRef.channel,envRef.esbreq_time,envRef.nsdlreq_time,
														envRef.nsdlres_time,CURRENT_TIMESTAMP,envRef.esb_req,envRef.nsdl_req,envRef.nsdl_res,
														envRef.esb_res,COALESCE(envRef.status,'Failed'),exc_desc
													)
						  );
		
	END;
END MODULE;
